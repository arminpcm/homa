#!/usr/bin/env python

import subprocess
import sys


def run_command(command):
    """Run a shell command."""
    result = subprocess.run(command, shell=True, text=True)
    return result.returncode


def test():
    """Run tests with pytest."""
    print("Running tests...")
    code = run_command("pytest")
    sys.exit(code)


def lint():
    """Run lint checks and type checks."""
    print("Running linting and formatting...")

    commands = ["uv run ruff check --fix", "uv run ruff format", "uv run mypy"]

    combined_code = 0
    for command in commands:
        print(f"Running: {command}")
        code = run_command(command)
        if code != 0:
            combined_code = code  # Store the latest non-zero exit code

    sys.exit(combined_code)


def start(detached):
    """Start the Docker Compose environment."""
    print("Starting Docker Compose...")
    detached_flag = "-d" if detached else ""
    code = run_command(
        f"docker compose -f docker/docker-compose.yml up --build {detached_flag}"
    )
    sys.exit(code)


def stop():
    """Stop and remove Docker Compose services."""
    print("Stopping Docker Compose...")
    code = run_command("docker compose -f docker/docker-compose.yml stop")
    sys.exit(code)


def restart(detached):
    """Restart the Docker Compose services."""
    print("Restarting Docker Compose...")
    stop()
    start(detached)


def main():
    if len(sys.argv) < 2:
        print("Usage: homa <command> [options]")
        print("Commands: test, lint, start, stop, restart")
        print("Options for start/restart: -d (run in detached mode)")
        sys.exit(1)

    command = sys.argv[1].lower()
    detached = "-d" in sys.argv

    if command == "test":
        test()
    elif command == "lint":
        lint()
    elif command == "start":
        start(detached)
    elif command == "stop":
        stop()
    elif command == "restart":
        restart(detached)
    else:
        print(f"Unknown command: {command}")
        print("Usage: homa <command> [options]")
        print("Commands: test, lint, start, stop, restart")
        print("Options for start/restart: -d (run in detached mode)")
        sys.exit(1)


if __name__ == "__main__":
    main()
